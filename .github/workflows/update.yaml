concurrency:
  cancel-in-progress: true
  group: "${{ github.workflow }}-${{ github.ref }}"
jobs:
  update:
    permissions:
      contents: "write"
      pull-requests: "write"
    runs-on: "ubuntu-latest"
    steps:
    - env:
        SECRETS: "${{ toJSON(secrets) }}"
      name: "Secret tests"
      uses: "actions/github-script@v7"
      with:
        script: |
          const secrets = JSON.parse(process.env.SECRETS);
          if (secrets.GPG_KEY === undefined || secrets.RADXA_APT_KEY_2024 === undefined) {
              core.setFailed('Required secrets are unset!');
          }
    - name: "Checkout rsdk"
      uses: "actions/checkout@v4"
      with:
        ref: "be2b25a30a6b24b2643bfd6a6eef4fae0b76c67d"
        repository: "RadxaOS-SDK/rsdk"
    - name: "Checkout current repo"
      uses: "actions/checkout@v4"
      with:
        path: ".infra-repo"
    - env:
        GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      id: "build"
      name: "Build apt archive"
      run: |
        pushd .infra-repo
        if [[ "${{ github.repository }}" != *-test ]] && \
            wget "https://raw.githubusercontent.com/${{ github.repository }}-test/main/pkgs.lock" -O pkgs.lock.new; then
            mv pkgs.lock.new pkgs.lock
            git add pkgs.lock
        fi
        
        ../src/bin/rsdk infra-pkg-snapshot
        git add pkgs.json
        
        if [[ -n "$(git status --porcelain)" ]]; then
            git commit -m "chore: update package snapshot"
        fi
        popd
      shell: "bash"
    - env:
        GH_TOKEN: "${{secrets.GITHUB_TOKEN}}"
        PR_BRANCH: "${{ github.job }}/${{ github.run_id }}"
      if: "steps.deploy.outcome == 'success'"
      name: "Commit package snapshot"
      run: |
        set -x
        pushd .infra-repo
        git branch -m "$PR_BRANCH"
        git push -u origin "$PR_BRANCH"
        PR_URL="$(gh pr create --head "$PR_BRANCH" --fill-verbose)"
        gh pr review --approve "$PR_URL"
        gh pr merge --auto --rebase --delete-branch "$PR_URL"
        popd
      shell: "bash"
name: "Update package info"
"on":
  repository_dispatch:
    types:
    - "new_package_release"
  workflow_dispatch: {}
permissions: {}